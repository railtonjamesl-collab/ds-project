knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(Hmisc)
install.packages("Hmisc")
library(tidyverse)
library(Hmisc)
knitr::opts_chunk$set(echo = TRUE)
install.packages("Hmisc")
library(tidyverse)
library(Hmisc)
loan <- read_csv("~/University of Bristol/Semester 1/Data Science Toolbox/Assessments/Assessment 0/ds-project/dataset/loan_data.csv", col_types ="nffnnfnfnnnnff")
loan <- read_csv(".../ds-project/dataset/loan_data.csv", col_types ="nffnnfnfnnnnff")
loan <- read_csv("../dataset/loan_data.csv", col_types ="nffnnfnfnnnnff")
library(tidyverse)
library(Hmisc)
library(scales)
library(corrplot)
library(rpart)
library(rpart.plot)
install.packages("rpart.plot")
library(rpart.plot)
library(caret)
install.packages("caret")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(Hmisc)
library(scales)
library(corrplot)
library(rpart)
library(rpart.plot)
library(caret)
loan <- read_csv("../dataset/loan_data.csv", col_types ="nffnnfnfnnnnff")
# View the first 10 rows of the data frame
head(loan, 10)
# Gives the dimensions of the data frame
dim(loan)
# Structure of data
str(loan)
# Summary of the whole data
summary(loan)
# Summary of the numeric data
loan %>% keep(is.numeric) %>% summary()
# Summary of the catagorical data
loan %>%  keep(is.factor) %>%  summary()  ### summary of factors variables
ggplot(loan, aes(x=person_income)) +
geom_histogram(position="identity", fill = "lightgreen", col = "white")+
scale_x_continuous(labels = label_number())
ggplot(loan, aes(x=person_age, colour = "white")) +
geom_histogram(position="identity", fill = "lightgreen", col = "white")
ggplot(loan, aes(x=person_emp_exp, colour = "white")) +
geom_histogram(position="identity", fill = "lightgreen", col = "white")
ggplot(loan, aes(x=loan_amnt, colour = "white")) +
geom_histogram(position="identity", fill = "lightgreen", col = "white")
ggplot(loan, aes(x=loan_int_rate, colour = "white")) +
geom_histogram(position="identity", fill = "lightgreen", col = "white")
ggplot(loan, aes(x=loan_percent_income, colour = "white")) +
geom_histogram(position="identity", fill = "lightgreen", col = "white")
ggplot(loan, aes(x=cb_person_cred_hist_length, colour = "white")) +
geom_histogram(position="identity", fill = "lightgreen", col = "white")
ggplot(loan, aes(x=credit_score, colour = "white")) +
geom_histogram(position="identity", fill = "lightgreen", col = "white")
loan_pred <- predict(loan_mod,test_data, type = "class")
higher_fence <- function(data) {
Q <- quantile(data, probs = 0.75)
IQR <- IQR(data)
higher_fence <- Q + 1.5*IQR
return(higher_fence)
}
higher_fence_age <- higher_fence(loan$person_age)
higher_fence_income <- higher_fence(loan$person_income)
higher_fence_emp_exp <- higher_fence(loan$person_emp_exp)
loan_original <- loan
loan <- loan %>% mutate(person_age =ifelse(person_age > higher_fence_age, NA, person_age)) %>%
mutate(person_income =ifelse(person_income > higher_fence_income, NA, person_income)) %>%
mutate(person_emp_exp =ifelse(person_emp_exp > higher_fence_emp_exp, NA, person_emp_exp))
# Review how many NAs that has added to the data
sapply(loan, function(x) sum(is.na(x)))
sum(is.na(loan))
# Remove variables no longer needed
rm(higher_fence, higher_fence_age, higher_fence_emp_exp, higher_fence_income)
loan %>% ggplot(aes(person_income)) + scale_y_log10() +
geom_boxplot(outlier.shape = 3, outlier.color = "red", fill = "lightgreen", color = "darkgreen")
loan_original %>% ggplot(aes(person_income)) + scale_y_log10() +
geom_boxplot(outlier.shape = 3, outlier.colour = "red", fill = "lightgreen", color = "darkgreen")
loan %>% ggplot(aes(person_age)) + scale_y_log10() +
geom_boxplot(outlier.shape = 3, outlier.color = "red", fill = "lightgreen", color = "darkgreen")
loan_original %>% ggplot(aes(person_age)) + scale_y_log10() +
geom_boxplot(outlier.shape = 3, outlier.colour = "red", fill = "lightgreen", color = "darkgreen")
loan %>% ggplot(aes(person_emp_exp)) + scale_y_log10() +
geom_boxplot(outlier.shape = 3, outlier.color = "red", fill = "lightgreen", color = "darkgreen")
loan_original %>% ggplot(aes(person_emp_exp)) + scale_y_log10() +
geom_boxplot(outlier.shape = 3, outlier.colour = "red", fill = "lightgreen", color = "darkgreen")
set.seed(1234)
sample_index <- sample(nrow(loan), round(nrow(loan) * .75), replace = FALSE)
train_data <- loan[sample_index, ]
test_data <- loan[-sample_index, ]
round(prop.table(table(select(loan, loan_status))), 2)
round(prop.table(table(select(train_data, loan_status))), 2)
round(prop.table(table(select(test_data, loan_status))), 2)
loan_mod <- rpart(loan_status ~ ., method = "class", data = train_data)
rpart.plot(loan_mod)
loan_pred <- predict(loan_mod,test_data, type = "class")
confusionMatrix(loan_pred, test_data$loan_status)
